/* Start by making your CSS behave relatively well across browsers
Set the font-size on html to make the font update dynamically to the screen-size
Since Bootstrap is being used, I won't normalize it. But feel free to customize to your heart's content
*/

html {
  font-size: 62.5%;
}

body {
  background: red;
}

a, a:hover, a:active, a:visited {
  color: black;
}

button {
  box-shadow: -2px 2px black; 
}

/* The #info element is very important so users know what your app is doing after all
Therefore, I have made a simple animation for when the page loads to make the element move
with the goal of getting people to click it and find out more
*/
@keyframes getAttention {
    0% {
        opacity: 0;
        transform: translateY(10px);
    }

    80% {
        opacity: 1;
        transform: translateY(-10px);
    }

    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

.title-box, .count-box {
  color: white;
}

.title-box {
  margin-top: 15%;
  margin-bottom: 2.5%;
}

.title {
  text-transform: uppercase;
  font-size: 8rem;
  border-bottom: 2.5px solid white;
}

.count-box {
  font-size: 3rem;
}

.buttons {
  margin-bottom: 25%;
}

.buttons button {
  margin-bottom: 1%;
  font-size: 2rem;
}

/* The .vex class is automatically applied by the vex library
This controls the modals that pop up when users click on certain buttons
See the client/app.js file for where vex is applied
But since the default modals appeared at the bottom of the screen,
add this to get them to appear near the top of the page so your site doens't look broken
*/
.vex {
  position: absolute;
  top: 5%;
  left: 50%;
  transform: translateX(-50%);
  font-size: 1.75rem;
}

/* Here is the element that receives the animation above */ 
#info {
  animation: getAttention 1s ease-out;
  animation-direction: backwards;
  animation-iteration-count: 3;
  color: black;
  font-size: 1.5rem;
  
  position: absolute;
  top: 2.5%;
  left: 85%;
  transform: translate(-50%);
  
  padding: 1rem;
  background: rgba(255, 200, 255, .55);
  
  border: 2px solid black;
  
  cursor: pointer;
  
  box-shadow: -2px 2px 5px rgba(0, 0, 0, .8);
}

#fight:hover {
  cursor: pointer;
  text-decoration: underline;
}

